@page "/orderconfirm/{uniqueId}"

@inject IViewOrderConfirmationUseCase viewOrderConfirmationUseCase
@inject NavigationManager navigationManager


<h3>Order Confirmation</h3>
<br />
@if (order != null)
{
    <p>
        <b>Shipping Info:</b>
    </p>
    <p>@order.CustomerName</p>
    <p>@order.CustomerAddress</p>
    <p>@order.CustomerCity</p>
    <p>@order.CustomerStateProvince</p>
    <p>@order.CustomerCountry</p>
    <br />
    <OrderSummaryComponent Order="order" HidePlaceOrder="true"></OrderSummaryComponent>

    <br />
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in order.LineItems)
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.Product.Price</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-danger">
        Order with this id doesn't exist, You will be redirected in few seconds.
    </div>
}

@code{
    private Order order;

    [Parameter]
    public string UniqueId { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();

        if (!string.IsNullOrWhiteSpace(UniqueId))
        {
            order = viewOrderConfirmationUseCase.Execute(UniqueId);
            if(order == null)
            {
                NavigateDelay();
            }
        }
        else
        {
            NavigateDelay();
        }
    }

    private async Task NavigateDelay()
    {
        await Task.Delay(5000);
        navigationManager.NavigateTo("/");
    }
}